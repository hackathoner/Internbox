{
  "name": "passport-angellist",
  "version": "0.1.2",
  "description": "AngelList authentication strategy for Passport.",
  "keywords": [
    "passport",
    "angellist",
    "auth",
    "authn",
    "authentication",
    "identity"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/jaredhanson/passport-angellist.git"
  },
  "bugs": {
    "url": "http://github.com/jaredhanson/passport-angellist/issues"
  },
  "author": {
    "name": "Jared Hanson",
    "email": "jaredhanson@gmail.com",
    "url": "http://www.jaredhanson.net/"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/MIT"
    }
  ],
  "main": "./lib/passport-angellist",
  "dependencies": {
    "pkginfo": "0.2.x",
    "passport-oauth": "0.1.x"
  },
  "devDependencies": {
    "vows": "0.6.x"
  },
  "scripts": {
    "test": "NODE_PATH=lib node_modules/.bin/vows test/*-test.js"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "readme": "# Passport-AngelList\n\n[Passport](https://github.com/jaredhanson/passport) strategy for authenticating\nwith [AngelList](http://angel.co/) using the OAuth 2.0 API.\n\nThis module lets you authenticate using AngelList in your Node.js applications.\nBy plugging into Passport, AngelList authentication can be easily and\nunobtrusively integrated into any application or framework that supports\n[Connect](http://www.senchalabs.org/connect/)-style middleware, including\n[Express](http://expressjs.com/).\n\n## Install\n\n    $ npm install passport-angellist\n\n## Usage\n\n#### Configure Strategy\n\nThe AngelList authentication strategy authenticates users using an AngelList\naccount and OAuth 2.0 tokens.  The strategy requires a `verify` callback, which\naccepts these credentials and calls `done` providing a user, as well as\n`options` specifying a client ID, client secret, and callback URL.\n\n    passport.use(new AngelListStrategy({\n        clientID: ANGELLIST_CLIENT_ID,\n        clientSecret: ANGELLIST_CLIENT_SECRET,\n        callbackURL: \"http://127.0.0.1:3000/auth/angellist/callback\"\n      },\n      function(accessToken, refreshToken, profile, done) {\n        User.findOrCreate({ angellistId: profile.id }, function (err, user) {\n          return done(err, user);\n        });\n      }\n    ));\n\n#### Authenticate Requests\n\nUse `passport.authenticate()`, specifying the `'angellist'` strategy, to\nauthenticate requests.\n\nFor example, as route middleware in an [Express](http://expressjs.com/)\napplication:\n\n    app.get('/auth/angellist',\n      passport.authenticate('angellist'));\n\n    app.get('/auth/angellist/callback', \n      passport.authenticate('angellist', { failureRedirect: '/login' }),\n      function(req, res) {\n        // Successful authentication, redirect home.\n        res.redirect('/');\n      });\n\n## Examples\n\nFor a complete, working example, refer to the [login example](https://github.com/jaredhanson/passport-angellist/tree/master/examples/login).\n\n## Tests\n\n    $ npm install --dev\n    $ make test\n\n[![Build Status](https://secure.travis-ci.org/jaredhanson/passport-angellist.png)](http://travis-ci.org/jaredhanson/passport-angellist)\n\n## Credits\n\n  - [Jared Hanson](http://github.com/jaredhanson)\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2011-2013 Jared Hanson <[http://jaredhanson.net/](http://jaredhanson.net/)>\n",
  "_id": "passport-angellist@0.1.2",
  "dist": {
    "shasum": "945ea173cd3543ca0a5018fa2f97a03880f90555",
    "tarball": "http://registry.npmjs.org/passport-angellist/-/passport-angellist-0.1.2.tgz"
  },
  "_npmVersion": "1.1.62",
  "_npmUser": {
    "name": "jaredhanson",
    "email": "jaredhanson@gmail.com"
  },
  "maintainers": [
    {
      "name": "jaredhanson",
      "email": "jaredhanson@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "945ea173cd3543ca0a5018fa2f97a03880f90555",
  "_from": "passport-angellist@",
  "_resolved": "https://registry.npmjs.org/passport-angellist/-/passport-angellist-0.1.2.tgz"
}
